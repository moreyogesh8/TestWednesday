<aura:component Controller="MyContactListController" implements="flexipage:availableForRecordHome,force:hasRecordId" access="global" >
	<!--If your component is designed only for record page use:flexipage:availableForRecordHome
	If your component needs recordId also implement the force:hasRecordId interface
	The force:hasRecordId does two things to a component that implements it.
	It adds an attribute name recordId to your component. This attribute is of type String, and its value is an 18 characters salesforce record id
	When your component is invoked in record context in Lightning Expirience or the salesforce App, recordId is set to an Id of the record being viewed.
 	Variable Declaration-->
    <aura:attribute name="recordId" type="Id" />
    <aura:attribute name="Account" type="Account" />
    <aura:attribute name="Contacts" type="Contact" />
    <aura:attribute name="Columns" type="List" />
    
    <!-- Defining init handler for component -->
    <aura:handler name="init" value="{!this}" action="{!c.myAction}" />
    
    <!--Provides ability to create,read,update and delete salesforce records in lightning. Default mode will be to VIEW,
    used to retrieve the details of the current account in v.Account variable -->
    <force:recordData aura:id="accountRecord"
                      recordId="{v.recordId}"
                      targetFields="{v.Account}"
                      layoutType="FULL"
                      />
    <!--A lightning:card is used to apply a stylized container around a grouping of information
    The information is a single item or group of items such as a related list -->
    <lightning:card iconName="standard:contact" title="{! 'Contact List for ' + v.Account.Name}">
        <!-- Lightning DataTable Dev is a Lightning Component intended for Lightening developers to them display data in a table/grid with searching, sorting and pagination features -->
        <lightning:datatable data="{!v.Contacts}" columns="{!v.Columns}" hideCheckboxColumn="true" keyField="recordId" />
        <!-- For displaying new button -->
        <aura:set attribute="actions">
            <!-- New button calls the function : newContact() onclick event -->
            <lightning:button label="New" onclick="{!c.newContact}" />
        </aura:set>
    </lightning:card> 
</aura:component>